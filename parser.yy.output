[parser.yy (info)] Line 492: 
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  declaration_list procedure_definition
2: declaration_list ->  procedure_declaration
3: declaration_list ->  variable_declaration_list procedure_declaration
4: declaration_list ->  procedure_declaration variable_declaration_list
5: procedure_declaration (VOID) ->  VOID NAME '(' ')' ';'
6: procedure_definition (NAME) ->  NAME '(' ')' #0001 '{' optional_variable_declaration_list #0002 statement_list '}'
7: #0001 ->  <empty>
8: #0002 ->  <empty>
9: optional_variable_declaration_list ->  <empty>
10: optional_variable_declaration_list ->  variable_declaration_list
11: variable_declaration_list ->  variable_declaration
12: variable_declaration_list ->  variable_declaration_list variable_declaration
13: variable_declaration (';') ->  declaration ';'
14: declaration (INTEGER) ->  INTEGER NAME
15: declaration (FLOAT) ->  FLOAT NAME
16: statement_list ->  <empty>
17: statement_list ->  statement_list assignment_statement
18: assignment_statement (ASSIGN) ->  variable ASSIGN arith_expression ';'
19: arith_expression ('+') ->  operand '+' operand
20: arith_expression ('-') ->  operand '-' operand
21: arith_expression ('*') ->  operand '*' operand
22: arith_expression ('/') ->  operand '/' operand
23: arith_expression (UMINUS) ->  '-' operand
24: arith_expression ('(') ->  '(' operand ')'
25: arith_expression ->  expression_term
26: operand ->  arith_expression
27: expression_term ->  variable
28: expression_term ->  constant
29: variable (NAME) ->  NAME
30: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
31: constant (DOUBLE_NUMBER) ->  DOUBLE_NUMBER
32: program_$ ->  program

[parser.yy (info)] 
Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: DOUBLE_NUMBER
   259: NAME
   260: INTEGER
   261: FLOAT
   262: ASSIGN
   263: VOID
   264: RETURN
    43: '+'
    45: '-'
    42: '*'
    47: '/'
   265: UMINUS
    40: '('
    41: ')'
    59: ';'
   123: '{'
   125: '}'

[parser.yy (info)] 
Grammar States: 
[parser.yy (info)] State 0:
32: program_$ ->  . program 
  0:   On program to state 1
  1:   On declaration_list to state 2
  2:   On procedure_declaration to state 3
  3:   On variable_declaration_list to state 4
  4:   On VOID to state 5
  5:   On variable_declaration to state 6
  6:   On declaration to state 7
  7:   On INTEGER to state 8
  8:   On FLOAT to state 9


State 1:
32: program_$ -> program  . 


State 2:
1: program -> declaration_list  . procedure_definition 
  0:   On procedure_definition to state 10
  1:   On NAME to state 11


State 3:
2: declaration_list -> procedure_declaration  . 
4: declaration_list -> procedure_declaration  . variable_declaration_list 
  0:   On variable_declaration_list to state 12
  1:   On variable_declaration to state 6
  2:   On declaration to state 7
  3:   On INTEGER to state 8
  4:   On FLOAT to state 9
  Reduce by 2: declaration_list -> procedure_declaration  . 


State 4:
3: declaration_list -> variable_declaration_list  . procedure_declaration 
12: variable_declaration_list -> variable_declaration_list  . variable_declaration 
  0:   On procedure_declaration to state 13
  1:   On variable_declaration to state 14
  2:   On VOID to state 5
  3:   On declaration to state 7
  4:   On INTEGER to state 8
  5:   On FLOAT to state 9


State 5:
5: procedure_declaration -> VOID  . NAME '(' ')' ';' 
  0:   On NAME to state 15


State 6:
11: variable_declaration_list -> variable_declaration  . 
  Reduce by 11: variable_declaration_list -> variable_declaration  . 


State 7:
13: variable_declaration -> declaration  . ';' 
  0:   On ';' to state 16


State 8:
14: declaration -> INTEGER  . NAME 
  0:   On NAME to state 17


State 9:
15: declaration -> FLOAT  . NAME 
  0:   On NAME to state 18


State 10:
1: program -> declaration_list procedure_definition  . 
  Reduce by 1: program -> declaration_list procedure_definition  . 


State 11:
6: procedure_definition -> NAME  . '(' ')' #0001 '{' optional_variable_declaration_list #0002 statement_list '}' 
  0:   On '(' to state 19


State 12:
4: declaration_list -> procedure_declaration variable_declaration_list  . 
12: variable_declaration_list -> variable_declaration_list  . variable_declaration 
  0:   On variable_declaration to state 14
  1:   On declaration to state 7
  2:   On INTEGER to state 8
  3:   On FLOAT to state 9
  Reduce by 4: declaration_list -> procedure_declaration variable_declaration_list  . 


State 13:
3: declaration_list -> variable_declaration_list procedure_declaration  . 
  Reduce by 3: declaration_list -> variable_declaration_list procedure_declaration  . 


State 14:
12: variable_declaration_list -> variable_declaration_list variable_declaration  . 
  Reduce by 12: variable_declaration_list -> variable_declaration_list variable_declaration  . 


State 15:
5: procedure_declaration -> VOID NAME  . '(' ')' ';' 
  0:   On '(' to state 20


State 16:
13: variable_declaration -> declaration ';'  . 
  Reduce by 13: variable_declaration -> declaration ';'  . 


State 17:
14: declaration -> INTEGER NAME  . 
  Reduce by 14: declaration -> INTEGER NAME  . 


State 18:
15: declaration -> FLOAT NAME  . 
  Reduce by 15: declaration -> FLOAT NAME  . 


State 19:
6: procedure_definition -> NAME '('  . ')' #0001 '{' optional_variable_declaration_list #0002 statement_list '}' 
  0:   On ')' to state 21


State 20:
5: procedure_declaration -> VOID NAME '('  . ')' ';' 
  0:   On ')' to state 22


State 21:
6: procedure_definition -> NAME '(' ')'  . #0001 '{' optional_variable_declaration_list #0002 statement_list '}' 
  0:   On #0001 to state 23
  Reduce by 7: #0001 ->  . 


State 22:
5: procedure_declaration -> VOID NAME '(' ')'  . ';' 
  0:   On ';' to state 24


State 23:
6: procedure_definition -> NAME '(' ')' #0001  . '{' optional_variable_declaration_list #0002 statement_list '}' 
  0:   On '{' to state 25


State 24:
5: procedure_declaration -> VOID NAME '(' ')' ';'  . 
  Reduce by 5: procedure_declaration -> VOID NAME '(' ')' ';'  . 


State 25:
6: procedure_definition -> NAME '(' ')' #0001 '{'  . optional_variable_declaration_list #0002 statement_list '}' 
  0:   On optional_variable_declaration_list to state 26
  1:   On variable_declaration_list to state 27
  2:   On variable_declaration to state 6
  3:   On declaration to state 7
  4:   On INTEGER to state 8
  5:   On FLOAT to state 9
  Reduce by 9: optional_variable_declaration_list ->  . 


State 26:
6: procedure_definition -> NAME '(' ')' #0001 '{' optional_variable_declaration_list  . #0002 statement_list '}' 
  0:   On #0002 to state 28
  Reduce by 8: #0002 ->  . 


State 27:
10: optional_variable_declaration_list -> variable_declaration_list  . 
12: variable_declaration_list -> variable_declaration_list  . variable_declaration 
  0:   On variable_declaration to state 14
  1:   On declaration to state 7
  2:   On INTEGER to state 8
  3:   On FLOAT to state 9
  Reduce by 10: optional_variable_declaration_list -> variable_declaration_list  . 


State 28:
6: procedure_definition -> NAME '(' ')' #0001 '{' optional_variable_declaration_list #0002  . statement_list '}' 
  0:   On statement_list to state 29
  Reduce by 16: statement_list ->  . 


State 29:
6: procedure_definition -> NAME '(' ')' #0001 '{' optional_variable_declaration_list #0002 statement_list  . '}' 
17: statement_list -> statement_list  . assignment_statement 
  0:   On '}' to state 30
  1:   On assignment_statement to state 31
  2:   On variable to state 32
  3:   On NAME to state 33


State 30:
6: procedure_definition -> NAME '(' ')' #0001 '{' optional_variable_declaration_list #0002 statement_list '}'  . 
  Reduce by 6: procedure_definition -> NAME '(' ')' #0001 '{' optional_variable_declaration_list #0002 statement_list '}'  . 


State 31:
17: statement_list -> statement_list assignment_statement  . 
  Reduce by 17: statement_list -> statement_list assignment_statement  . 


State 32:
18: assignment_statement -> variable  . ASSIGN arith_expression ';' 
  0:   On ASSIGN to state 34


State 33:
29: variable -> NAME  . 
  Reduce by 29: variable -> NAME  . 


State 34:
18: assignment_statement -> variable ASSIGN  . arith_expression ';' 
  0:   On arith_expression to state 35
  1:   On operand to state 36
  2:   On '-' to state 37
  3:   On '(' to state 38
  4:   On expression_term to state 39
  5:   On variable to state 40
  6:   On constant to state 41
  7:   On NAME to state 33
  8:   On INTEGER_NUMBER to state 42
  9:   On DOUBLE_NUMBER to state 43


State 35:
18: assignment_statement -> variable ASSIGN arith_expression  . ';' 
26: operand -> arith_expression  . 
  0:   On ';' to state 44
  Reduce by 26: operand -> arith_expression  . 


State 36:
19: arith_expression -> operand  . '+' operand 
20: arith_expression -> operand  . '-' operand 
21: arith_expression -> operand  . '*' operand 
22: arith_expression -> operand  . '/' operand 
  0:   On '+' to state 45
  1:   On '-' to state 46
  2:   On '*' to state 47
  3:   On '/' to state 48


State 37:
23: arith_expression -> '-'  . operand 
  0:   On operand to state 49
  1:   On arith_expression to state 50
  2:   On '-' to state 37
  3:   On '(' to state 38
  4:   On expression_term to state 39
  5:   On variable to state 40
  6:   On constant to state 41
  7:   On NAME to state 33
  8:   On INTEGER_NUMBER to state 42
  9:   On DOUBLE_NUMBER to state 43


State 38:
24: arith_expression -> '('  . operand ')' 
  0:   On operand to state 51
  1:   On arith_expression to state 50
  2:   On '-' to state 37
  3:   On '(' to state 38
  4:   On expression_term to state 39
  5:   On variable to state 40
  6:   On constant to state 41
  7:   On NAME to state 33
  8:   On INTEGER_NUMBER to state 42
  9:   On DOUBLE_NUMBER to state 43


State 39:
25: arith_expression -> expression_term  . 
  Reduce by 25: arith_expression -> expression_term  . 


State 40:
27: expression_term -> variable  . 
  Reduce by 27: expression_term -> variable  . 


State 41:
28: expression_term -> constant  . 
  Reduce by 28: expression_term -> constant  . 


State 42:
30: constant -> INTEGER_NUMBER  . 
  Reduce by 30: constant -> INTEGER_NUMBER  . 


State 43:
31: constant -> DOUBLE_NUMBER  . 
  Reduce by 31: constant -> DOUBLE_NUMBER  . 


State 44:
18: assignment_statement -> variable ASSIGN arith_expression ';'  . 
  Reduce by 18: assignment_statement -> variable ASSIGN arith_expression ';'  . 


State 45:
19: arith_expression -> operand '+'  . operand 
  0:   On operand to state 52
  1:   On arith_expression to state 50
  2:   On '-' to state 37
  3:   On '(' to state 38
  4:   On expression_term to state 39
  5:   On variable to state 40
  6:   On constant to state 41
  7:   On NAME to state 33
  8:   On INTEGER_NUMBER to state 42
  9:   On DOUBLE_NUMBER to state 43


State 46:
20: arith_expression -> operand '-'  . operand 
  0:   On operand to state 53
  1:   On arith_expression to state 50
  2:   On '-' to state 37
  3:   On '(' to state 38
  4:   On expression_term to state 39
  5:   On variable to state 40
  6:   On constant to state 41
  7:   On NAME to state 33
  8:   On INTEGER_NUMBER to state 42
  9:   On DOUBLE_NUMBER to state 43


State 47:
21: arith_expression -> operand '*'  . operand 
  0:   On operand to state 54
  1:   On arith_expression to state 50
  2:   On '-' to state 37
  3:   On '(' to state 38
  4:   On expression_term to state 39
  5:   On variable to state 40
  6:   On constant to state 41
  7:   On NAME to state 33
  8:   On INTEGER_NUMBER to state 42
  9:   On DOUBLE_NUMBER to state 43


State 48:
22: arith_expression -> operand '/'  . operand 
  0:   On operand to state 55
  1:   On arith_expression to state 50
  2:   On '-' to state 37
  3:   On '(' to state 38
  4:   On expression_term to state 39
  5:   On variable to state 40
  6:   On constant to state 41
  7:   On NAME to state 33
  8:   On INTEGER_NUMBER to state 42
  9:   On DOUBLE_NUMBER to state 43


State 49:
23: arith_expression -> '-' operand  . 
19: arith_expression -> operand  . '+' operand 
20: arith_expression -> operand  . '-' operand 
21: arith_expression -> operand  . '*' operand 
22: arith_expression -> operand  . '/' operand 
  0 (removed by precedence):   On '+' to state 45
  1 (removed by precedence):   On '-' to state 46
  2 (removed by precedence):   On '*' to state 47
  3 (removed by precedence):   On '/' to state 48
  Reduce by 23: arith_expression -> '-' operand  . 


State 50:
26: operand -> arith_expression  . 
  Reduce by 26: operand -> arith_expression  . 


State 51:
24: arith_expression -> '(' operand  . ')' 
19: arith_expression -> operand  . '+' operand 
20: arith_expression -> operand  . '-' operand 
21: arith_expression -> operand  . '*' operand 
22: arith_expression -> operand  . '/' operand 
  0:   On ')' to state 56
  1:   On '+' to state 45
  2:   On '-' to state 46
  3:   On '*' to state 47
  4:   On '/' to state 48


State 52:
19: arith_expression -> operand '+' operand  . 
19: arith_expression -> operand  . '+' operand 
20: arith_expression -> operand  . '-' operand 
21: arith_expression -> operand  . '*' operand 
22: arith_expression -> operand  . '/' operand 
  0 (removed by precedence):   On '+' to state 45
  1 (removed by precedence):   On '-' to state 46
  2:   On '*' to state 47
  3:   On '/' to state 48
  Reduce by 19: arith_expression -> operand '+' operand  . 


State 53:
20: arith_expression -> operand '-' operand  . 
19: arith_expression -> operand  . '+' operand 
20: arith_expression -> operand  . '-' operand 
21: arith_expression -> operand  . '*' operand 
22: arith_expression -> operand  . '/' operand 
  0 (removed by precedence):   On '+' to state 45
  1 (removed by precedence):   On '-' to state 46
  2:   On '*' to state 47
  3:   On '/' to state 48
  Reduce by 20: arith_expression -> operand '-' operand  . 


State 54:
21: arith_expression -> operand '*' operand  . 
19: arith_expression -> operand  . '+' operand 
20: arith_expression -> operand  . '-' operand 
21: arith_expression -> operand  . '*' operand 
22: arith_expression -> operand  . '/' operand 
  0 (removed by precedence):   On '+' to state 45
  1 (removed by precedence):   On '-' to state 46
  2 (removed by precedence):   On '*' to state 47
  3 (removed by precedence):   On '/' to state 48
  Reduce by 21: arith_expression -> operand '*' operand  . 


State 55:
22: arith_expression -> operand '/' operand  . 
19: arith_expression -> operand  . '+' operand 
20: arith_expression -> operand  . '-' operand 
21: arith_expression -> operand  . '*' operand 
22: arith_expression -> operand  . '/' operand 
  0 (removed by precedence):   On '+' to state 45
  1 (removed by precedence):   On '-' to state 46
  2 (removed by precedence):   On '*' to state 47
  3 (removed by precedence):   On '/' to state 48
  Reduce by 22: arith_expression -> operand '/' operand  . 


State 56:
24: arith_expression -> '(' operand ')'  . 
  Reduce by 24: arith_expression -> '(' operand ')'  . 



